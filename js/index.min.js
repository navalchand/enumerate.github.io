"use strict";
var theme = {
    btn: document.querySelectorAll(".toggle-theme__btn"),
    colorBluePurple: document.querySelector('[data-theme="blue-purple"]'),
    colorBlack: document.querySelector('[data-theme="black"]'),
    colorHotpink: document.querySelector('[data-theme="hotpink"]'),
    status: document.querySelector("#js-toggle-status"),
    assign: function(e) {
        document.documentElement.setAttribute("data-theme", e)
    },
    resetButtons: function() {
        theme.btn.forEach(function(e) {
            e.blur(), delete e.dataset.active
        })
    },
    clearTheme: function() {
        localStorage.getItem("theme") && (localStorage.clear(), theme.assign(""))
    },
    setLightMode: function() {
        theme.resetButtons(), theme.colorBluePurple.dataset.active = !0, theme.status.innerHTML = "light mode"
    },
    setDarkMode: function() {
        theme.resetButtons(), theme.colorBlack.dataset.active = !0, theme.status.innerHTML = "dark mode"
    },
    checkMatchMedia: function(e, t) {
        window.matchMedia(e).addListener(function(e) {
            e.matches && (theme.clearTheme(), t())
        })
    },
    setDefault: function() {
        var e = "(prefers-color-scheme:light)",
            t = "(prefers-color-scheme:dark)",
            o = window.matchMedia(e).matches,
            c = window.matchMedia(t).matches;
        o && theme.setLightMode(), c && theme.setDarkMode(), theme.checkMatchMedia(e, theme.setLightMode), theme.checkMatchMedia(t, theme.setDarkMode)
    },
    checkHotpink: function(e) {
        theme.colorHotpink || "hotpink" === e && (theme.colorBluePurple.dataset.active = !0)
    },
    set: function() {
        var t = localStorage.getItem("theme");
        if (t) {
            theme.status.innerHTML = t, theme.assign(t), theme.checkHotpink(t), theme.btn.forEach(function(e) {
                e.dataset.theme === t && (e.dataset.active = !0)
            });
            theme.checkMatchMedia("(prefers-color-scheme: light)", theme.setLightMode), theme.checkMatchMedia("(prefers-color-scheme: dark)", theme.setDarkMode)
        } else theme.setDefault()
    },
    select: function(e) {
        theme.resetButtons();
        var t = e.currentTarget;
        t.dataset.active = !0;
        var o = t.dataset.theme;
        theme.status.innerHTML = o, theme.assign(o), localStorage.setItem("theme", o)
    },
    change: function() {
        theme.btn.forEach(function(e) {
            return e.addEventListener("click", theme.select)
        })
    }
};

function loadInContent(e) {
    var t = {
        set: function(e) {
            "number" == typeof t.timeoutID && t.cancel(), t.timeoutID = setTimeout(function() {
                return e.style.transform = "translateY(-100%)"
            }, 50)
        },
        cancel: function() {
            clearTimeout(t.timeoutID)
        }
    };
    t.set(e)
}
theme.set(), theme.change();
var loader = document.querySelector("#js-loader");
loader && window.addEventListener("load", loadInContent(loader));
var logo = document.querySelector("#js-logo"),
    showLogo = function() {
        return logo.style.opacity = "1"
    };
logo && showLogo();
var linkToTop = document.querySelector("#js-scrolltop");

function scrollToTop(e) {
    e.preventDefault(), e.currentTarget.blur(), window.scrollTo({
        top: 0,
        left: 0,
        behavior: "smooth"
    })
}
linkToTop && linkToTop.addEventListener("click", scrollToTop);